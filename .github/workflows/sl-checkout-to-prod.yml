name: sl-checkout-to-prod
run-name: ${{ github.ACTOR }} triggered sl-checkout-to-prod workflow.

on:
  push:
    branches:
      - 'main'
    paths:
      - '**.slp'
      - '**.slt'
      - '**.sla'

env:
  # SL - SnapLogic
  # PETE - Pete Virtual Assistant
    SL_SOURCE_ORG: Interworks-Partner
    SL_TARGET_ORG: Interworks-Partner
    SL_SOURCE_PSPACE: PeteCICDGithub
    SL_TARGET_PSPACE: PeteCICDGithub
    SL_SOURCE_PROJECT: Project_WWW_Test
    SL_TARGET_PROJECT: Project_WWW_Prod
    PETE_TARGET_SYSTEM: Sharepoint # ["Sharepoint","Confluence","PDF"] - Default PDF
    PETE_MAIN_PAGE: Snaplogic Docs

jobs:
  generate-tasks-config:
    runs-on: ubuntu-latest
    steps:
        - name: repository-checkout
          uses: actions/checkout@v3
        
        - name: tasks-config-generation
          run: python .github/scripts/generate-tasks-config.py "${{ secrets.SL_EMAIL }}" "${{ secrets.SL_PW }}" "$SL_SOURCE_ORG" "$SL_TARGET_ORG" "$SL_SOURCE_PSPACE" "$SL_TARGET_PSPACE" "$SL_SOURCE_PROJECT" "$SL_TARGET_PROJECT"

        - name: uploading-tasks-config
          uses: actions/upload-artifact@v3
          with:
            name: tasks-config-artifact
            path: tasks-config.json

  gh-create-release:
    needs: generate-tasks-config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: gh-create-release-tag
        run: python .github/scripts/gh-create-release.py "${{ github.REPOSITORY }}" "${{ secrets.GH_TOKEN }}"

  sl-checkout-to-prod:
    needs: gh-create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: sl-checkout-to-prod
        run: python .github/scripts/sl-checkout-to-prod.py "${{ secrets.SL_EMAIL }}" "${{ secrets.SL_PW }}" "$SL_TARGET_ORG" "$SL_TARGET_PSPACE" "$SL_TARGET_PROJECT" "${{ github.REPOSITORY }}" "${{ secrets.GH_TOKEN }}"

  sl-update-tasks:
    runs-on: ubuntu-latest
    needs: sl-checkout-to-prod
    steps:
      - name: repository-checkout
        uses: actions/checkout@v3
              
      - name: downloading-tasks-config
        uses: actions/download-artifact@v3
        with:
              name: tasks-config-artifact
              
      - name: update-tasks
        run: python .github/scripts/sl-update-tasks.py "${{ secrets.SL_EMAIL }}" "${{ secrets.SL_PW }}" "$SL_TARGET_ORG" "$SL_TARGET_PSPACE" "$SL_TARGET_PROJECT"

  pete-upsert-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: pete-upsert-documentation
        run: python .github/scripts/pete-upsert-documentation.py "${{ secrets.PETE_EMAIL }}" "${{ secrets.PETE_PW }}" "${{ secrets.PETE_KEY }}" "$SL_TARGET_ORG" "$SL_TARGET_PSPACE" "$SL_TARGET_PROJECT" "$PETE_TARGET_SYSTEM" "$PETE_MAIN_PAGE"

  gh-delete-artifacts:
      runs-on: ubuntu-latest
      needs: pete-upsert-documentation
      steps:
        - name: repository-checkout
          uses: actions/checkout@v3

        - name: run-delete-workflow
          run: python .github/scripts/gh-trigger-delete-artifacts-workflow.py "${{ github.REPOSITORY }}" "${{ secrets.GH_TOKEN }}"
